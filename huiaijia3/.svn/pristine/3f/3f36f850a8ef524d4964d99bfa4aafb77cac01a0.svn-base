<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   					http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop
	   					http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
						http://www.springframework.org/schema/tx
	   					http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
						http://www.springframework.org/schema/context
	   					http://www.springframework.org/schema/context/spring-context-3.2.xsd"
>

	<!--阿里巴巴的druid数据库连接 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="url"
				  value="jdbc:mysql://115.29.170.224:3306/huiaijia?Unicode=true&amp;characterEncoding=UTF-8"/>
		<property name="username" value="huiaijia"/>
		<property name="password" value="huiaijiapwd"/>

		<!-- 链接本地数据库-->
		<!--<property name="url"-->
				  <!--value="jdbc:mysql://localhost:3306/huiaijia?Unicode=true&amp;characterEncoding=UTF-8"/>-->
		<!--<property name="username" value="root"/>-->
		<!--<property name="password" value="123"/>-->

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize">
			<value>1</value>
		</property>
		<property name="maxActive">
			<value>500</value>
		</property>
		<property name="minIdle">
			<value>1</value>
		</property>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait">
			<value>60000</value>
		</property>
		<!-- 配置监控统计拦截的filters -->
		<property name="filters">
			<value>stat</value>
		</property>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis">
			<value>60000</value>
		</property>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis">
			<value>300000</value>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis/config.xml"/>
		<property name="mapperLocations" value="classpath:mybatis/*Mapper.xml"/>
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>

	<!-- 扫描 basePackage下所有的接口，根据对应的mapper.xml为其生成代理类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.flf.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

	<bean name="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--通知-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception"/>
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception"/>
			<tx:method name="batchImport" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception"/>

			<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="query*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.flf.service..*(..))"/>
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice"/>
	</aop:config>

	<context:component-scan base-package="com.flf.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

</beans>
